name: MkDocs Deploy on PR Open

on:
  pull_request:
    branches:
      - master  # Replace with your main branch name
    types:
      - opened

jobs:
  deploy_open_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: Install MkDocs
        run: |
          pip install mkdocs
          pip install mkdocs-material  # Replace with your theme if different

      - name: Build MkDocs
        run: |
          mkdocs build -f docs/mkdocs.yml  # Specify the correct path to your mkdocs.yml file

      - name: Retrieve Deployment URL
        id: deployment_url
        run: |
          DEPLOYMENT_URL=$(curl -sS -H "Authorization: Bearer $GITHUB_TOKEN" \
                         "https://api.github.com/repos/${GITHUB_REPOSITORY}/pages/builds/latest" | jq -r .status.deployments[0].url)
          echo "::set-output name=deployment_url::$DEPLOYMENT_URL"

      - name: Post Deployment URL as PR Comment
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const deploymentURL = `${process.env.DEPLOYMENT_URL}`;
            const comment = `MkDocs deployed to [${deploymentURL}](${deploymentURL})`;
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pullRequest.number,
              body: comment
            });
